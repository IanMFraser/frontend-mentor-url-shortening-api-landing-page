{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/IMF1/Desktop/projects/frontend-mentor/url-shortening-api-master/url-shortening-api/src/components/LinkCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\n\nconst LinkCard = ({\n  link\n}) => {\n  _s();\n\n  const originalUrl = link.long;\n  const shortenedUrl = link.short;\n  const [copied, setCopied] = useState(false);\n\n  const copyUrl = () => {\n    const button = document.getElementById(`${originalUrl}`);\n    const copyText = document.querySelector('.copy-link').firstChild;\n    const r = document.createRange();\n    r.selectNode(copyText);\n\n    if (!copied) {\n      window.getSelection().removeAllRanges();\n      window.getSelection().addRange(r);\n      document.execCommand(\"copy\");\n      window.getSelection().removeAllRanges();\n      button.style.backgroundColor = \"hsl(257, 27%, 26%)\";\n      button.style.color = \"white\";\n      button.innerHTML = \"Copied!\";\n      setCopied(true);\n      setTimeout(function () {\n        button.style.backgroundColor = \"hsl(180, 66%, 49%)\";\n        button.style.color = \"white\";\n        button.innerHTML = \"Copy!\";\n        setCopied(false);\n      }, 3000);\n    }\n  };\n\n  const tooLong = longUrl => {\n    if (longUrl.length > 50) {\n      const newUrl = [];\n\n      for (let i = 0; i < 100; i++) {\n        newUrl.push(longUrl[i]);\n      }\n\n      return `${newUrl.join('')}...`;\n    } else {\n      return longUrl;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"link-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: tooLong(originalUrl)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"copy-link\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: shortenedUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: `${originalUrl}`,\n        className: \"copy-link-button\",\n        onClick: copyUrl,\n        children: \"Copy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LinkCard, \"NE86rL3vg4NVcTTWDavsT0hUBJs=\");\n\n_c = LinkCard;\nexport default LinkCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"LinkCard\");","map":{"version":3,"sources":["/Users/IMF1/Desktop/projects/frontend-mentor/url-shortening-api-master/url-shortening-api/src/components/LinkCard.js"],"names":["React","useState","LinkCard","link","originalUrl","long","shortenedUrl","short","copied","setCopied","copyUrl","button","document","getElementById","copyText","querySelector","firstChild","r","createRange","selectNode","window","getSelection","removeAllRanges","addRange","execCommand","style","backgroundColor","color","innerHTML","setTimeout","tooLong","longUrl","length","newUrl","i","push","join"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AAAA;;AACzB,QAAMC,WAAW,GAAGD,IAAI,CAACE,IAAzB;AACA,QAAMC,YAAY,GAAGH,IAAI,CAACI,KAA1B;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,KAAD,CAApC;;AAEA,QAAMS,OAAO,GAAG,MAAM;AAClB,UAAMC,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAyB,GAAET,WAAY,EAAvC,CAAf;AACA,UAAMU,QAAQ,GAAGF,QAAQ,CAACG,aAAT,CAAuB,YAAvB,EAAqCC,UAAtD;AACA,UAAMC,CAAC,GAAGL,QAAQ,CAACM,WAAT,EAAV;AACAD,IAAAA,CAAC,CAACE,UAAF,CAAaL,QAAb;;AACA,QAAG,CAACN,MAAJ,EAAW;AACPY,MAAAA,MAAM,CAACC,YAAP,GAAsBC,eAAtB;AACAF,MAAAA,MAAM,CAACC,YAAP,GAAsBE,QAAtB,CAA+BN,CAA/B;AACAL,MAAAA,QAAQ,CAACY,WAAT,CAAqB,MAArB;AACAJ,MAAAA,MAAM,CAACC,YAAP,GAAsBC,eAAtB;AACAX,MAAAA,MAAM,CAACc,KAAP,CAAaC,eAAb,GAA+B,oBAA/B;AACAf,MAAAA,MAAM,CAACc,KAAP,CAAaE,KAAb,GAAqB,OAArB;AACAhB,MAAAA,MAAM,CAACiB,SAAP,GAAmB,SAAnB;AACAnB,MAAAA,SAAS,CAAC,IAAD,CAAT;AAEAoB,MAAAA,UAAU,CACN,YAAU;AACNlB,QAAAA,MAAM,CAACc,KAAP,CAAaC,eAAb,GAA+B,oBAA/B;AACAf,QAAAA,MAAM,CAACc,KAAP,CAAaE,KAAb,GAAqB,OAArB;AACAhB,QAAAA,MAAM,CAACiB,SAAP,GAAmB,OAAnB;AACAnB,QAAAA,SAAS,CAAC,KAAD,CAAT;AACH,OANK,EAMH,IANG,CAAV;AAQH;AACJ,GAxBD;;AA0BA,QAAMqB,OAAO,GAAIC,OAAD,IAAa;AACzB,QAAGA,OAAO,CAACC,MAAR,GAAiB,EAApB,EAAwB;AACpB,YAAMC,MAAM,GAAG,EAAf;;AACA,WAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,GAAnB,EAAwBA,CAAC,EAAzB,EAA6B;AACzBD,QAAAA,MAAM,CAACE,IAAP,CAAYJ,OAAO,CAACG,CAAD,CAAnB;AACH;;AACD,aAAQ,GAAED,MAAM,CAACG,IAAP,CAAY,EAAZ,CAAgB,KAA1B;AACH,KAND,MAMO;AACH,aAAOL,OAAP;AACH;AACJ,GAVD;;AAYA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACI;AAAA,gBAAID,OAAO,CAAC1B,WAAD;AAAX;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI;AAAA,kBAAIE;AAAJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,EAAE,EAAG,GAAEF,WAAY,EAA3B;AAA8B,QAAA,SAAS,EAAC,kBAAxC;AAA2D,QAAA,OAAO,EAAEM,OAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CApDD;;GAAMR,Q;;KAAAA,Q;AAsDN,eAAeA,QAAf","sourcesContent":["import React, {useState} from 'react'\n\nconst LinkCard = ({link}) => {\n    const originalUrl = link.long\n    const shortenedUrl = link.short\n    const [copied, setCopied] = useState(false)\n\n    const copyUrl = () => {\n        const button = document.getElementById(`${originalUrl}`)\n        const copyText = document.querySelector('.copy-link').firstChild\n        const r = document.createRange()\n        r.selectNode(copyText)\n        if(!copied){\n            window.getSelection().removeAllRanges()\n            window.getSelection().addRange(r)\n            document.execCommand(\"copy\")\n            window.getSelection().removeAllRanges()\n            button.style.backgroundColor = \"hsl(257, 27%, 26%)\"\n            button.style.color = \"white\"\n            button.innerHTML = \"Copied!\"\n            setCopied(true)\n\n            setTimeout(\n                function(){\n                    button.style.backgroundColor = \"hsl(180, 66%, 49%)\";\n                    button.style.color = \"white\"\n                    button.innerHTML = \"Copy!\"\n                    setCopied(false)\n                }, 3000\n            )\n        }\n    }\n\n    const tooLong = (longUrl) => {\n        if(longUrl.length > 50) {\n            const newUrl = []\n            for(let i = 0; i < 100; i++) {\n                newUrl.push(longUrl[i])\n            }\n            return `${newUrl.join('')}...`\n        } else {\n            return longUrl\n        }\n    }\n\n    return(\n        <div className=\"link-card\">\n            <p>{tooLong(originalUrl)}</p>\n            <div className=\"copy-link\">\n                <p>{shortenedUrl}</p>\n                <button id={`${originalUrl}`} className=\"copy-link-button\" onClick={copyUrl}>Copy</button>\n            </div>\n        </div>\n    )\n}\n\nexport default LinkCard"]},"metadata":{},"sourceType":"module"}